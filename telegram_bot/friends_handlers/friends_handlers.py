from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from telegram_bot.utils.context_cleanup import clear_friends_context
from database.db_friends import get_friends, get_display_name
from telegram_bot.friends_handlers.friends_info import show_friend_info
from telegram_bot.friends_handlers.friends_creation import start_friend_addition, handle_friend_creation
from telegram_bot.friends_handlers.friends_deletion import handle_friend_deletion
from telegram_bot.friends_handlers.friends_roles import handle_role_update, build_role_selection_keyboard
from telegram_bot.friends_handlers.access_settings import handle_access_settings
from telegram_bot.main_menu_handlers.keyboards import main_menu_markup
from database.db_friends import get_friends, get_display_name 



# üìú –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–ø–∏—Å–∫–∞ –¥—Ä—É–∑–µ–π
def build_friends_keyboard(friends):
    keyboard = [[f"üë• {friend['display_name']}"] for friend in friends]
    keyboard.append(["‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞"])
    keyboard.append(["üè† –õ–æ–±–±–∏"])
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)


# üìú –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –¥—Ä—É–≥–æ–º
def build_friend_action_keyboard(friend_name):
    return ReplyKeyboardMarkup([
        ["‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å"],
        ["üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞"],
        [f"üìÑ –ò–Ω—Ñ–æ {friend_name}"],
        ["üîç –£–¥–∞–ª–∏—Ç—å –∏–∑ –¥—Ä—É–∑–µ–π"],
        ["üîö –ù–∞–∑–∞–¥"]
    ], resize_keyboard=True)


# üìÇ –ú–µ–Ω—é –¥—Ä—É–∑–µ–π
async def show_friends_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.effective_user.id)
    friends = await get_friends(user_id)

    # ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º display_name –∫–∞–∂–¥–æ–º—É –¥—Ä—É–≥—É
    for friend in friends:
        friend["display_name"] = await get_display_name(friend["friend_id"])

    clear_friends_context(context)  # ‚Üê –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞, mode —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è
    context.user_data["friends"] = friends

    if friends:
        await update.message.reply_text("ü§ù –í–∞—à–∏ –¥—Ä—É–∑—å—è:", reply_markup=build_friends_keyboard(friends))
    else:
        await update.message.reply_text(
            "ü§ù –£ –≤–∞—Å –µ—â—ë –Ω–µ—Ç –¥—Ä—É–∑–µ–π.",
            reply_markup=ReplyKeyboardMarkup([
                ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞"],
                ["üè† –õ–æ–±–±–∏"]
            ], resize_keyboard=True)
        )



# üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤ —Ä–∞–∑–¥–µ–ª–µ "–î—Ä—É–∑—å—è"
async def handle_friends_navigation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.user_data.get("mode") != "friends":
        await update.message.reply_text("‚ùóÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.")
        return

    text = update.message.text
    state = context.user_data.get("state")

    result = await handle_friend_creation(update, context)
    if result == "refresh_friends":
        await show_friends_menu(update, context)
        return
    elif result:
        return

    if state == "awaiting_role_selection":
        result = await handle_role_update(update, context)
        if result == "role_updated":
            friend_name = context.user_data.get("selected_friend_name")
            await update.message.reply_text(
                f"üìà –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è {friend_name}:",
                reply_markup=build_friend_action_keyboard(friend_name)
            )
        return

    if state == "awaiting_friend_deletion_confirm":
        result = await handle_friend_deletion(update, context)
        if result == "refresh_friends_menu":
            await show_friends_menu(update, context)
        return

    if state == "access_settings":
        await handle_access_settings(update, context)
        return

    if text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞":
        await start_friend_addition(update, context)
        return

    if text == "üè† –õ–æ–±–±–∏":
        clear_friends_context(context)
        context.user_data["mode"] = None
        await update.message.reply_text("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu_markup)
        return

    # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥—Ä—É–≥–∞ –ø–æ display_name (–±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ —ç–º–æ–¥–∑–∏)
    friends = context.user_data.get("friends", [])
    normalized_text = text.replace("üë•", "").strip().lower()

    friend = next(
        (f for f in friends if f["display_name"].strip().lower() == normalized_text),
        None
    )

    if friend:
        friend_name = friend["display_name"]
        context.user_data["selected_friend_name"] = friend_name
        context.user_data["selected_friend_user_id"] = friend["friend_user_id"]
        context.user_data["state"] = "friend_selected"

        await update.message.reply_text(
            f"üìà –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è {friend_name}:",
            reply_markup=build_friend_action_keyboard(friend_name)
        )
        return

    if text.startswith("üìÑ –ò–Ω—Ñ–æ "):
        await show_friend_info(update, context)
        return

    if text == "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å":
        context.user_data["state"] = "awaiting_role_selection"
        await update.message.reply_text("‚úèÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å:", reply_markup=build_role_selection_keyboard())
        return

    if text == "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞":
        context.user_data["state"] = "access_settings"
        await handle_access_settings(update, context)
        return

    if text == "üîç –£–¥–∞–ª–∏—Ç—å –∏–∑ –¥—Ä—É–∑–µ–π":
        context.user_data["state"] = "awaiting_friend_deletion_confirm"
        await handle_friend_deletion(update, context)
        return

    if text == "üîö –ù–∞–∑–∞–¥":
        context.user_data.pop("state", None)
        context.user_data.pop("selected_friend_name", None)
        context.user_data.pop("selected_friend_user_id", None)
        await show_friends_menu(update, context)
        return

    await update.message.reply_text("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.")


__all__ = [
    "show_friends_menu",
    "handle_friends_navigation",
]
