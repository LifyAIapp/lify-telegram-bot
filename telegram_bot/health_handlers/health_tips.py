# telegram_bot/health_handlers/health_tips.py
from openai import OpenAI
from config import OPENAI_API_KEY
from telegram import Update
from telegram.ext import ContextTypes
import logging

client = OpenAI(api_key=OPENAI_API_KEY)
logger = logging.getLogger(__name__)

async def show_health_tip(update: Update, context: ContextTypes.DEFAULT_TYPE):
    prompt = "–î–∞–π –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Å–æ–≤–µ—Ç –ø–æ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—é —Ö–æ—Ä–æ—à–µ–≥–æ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è —Å–µ–≥–æ–¥–Ω—è."

    try:
        response = client.chat.completions.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "–¢—ã ‚Äî –∑–∞–±–æ—Ç–ª–∏–≤—ã–π AI-–¥—Ä—É–≥, –∫–æ—Ç–æ—Ä—ã–π –¥–∞—ë—Ç —Å–æ–≤–µ—Ç—ã –ø–æ –∑–¥–æ—Ä–æ–≤—å—é."},
                {"role": "user", "content": prompt}
            ],
            max_tokens=100,
            temperature=0.7
        )
        tip = response.choices[0].message.content.strip()
    except Exception as e:
        logger.error(f"[AI] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–≤–µ—Ç–∞: {e}")
        tip = "üí° –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –æ—Ç AI."

    await update.message.reply_text(tip)
