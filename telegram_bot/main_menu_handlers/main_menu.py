import logging
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from telegram_bot.utils.user_registry import register_user  # —Å–æ–∑–¥–∞–¥–∏–º –Ω–∏–∂–µ
from telegram_bot.profile_handlers.profile_handlers import show_profile_menu
from telegram_bot.friends_handlers.friends_handlers import show_friends_menu
from telegram_bot.events_handlers.events_handlers import show_events_menu  # –∏–º–ø–æ—Ä—Ç —Å–æ–±—ã—Ç–∏–π
from telegram_bot.main_menu_handlers.keyboards import main_menu_keyboard, main_menu_markup

logger = logging.getLogger(__name__)

# –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
start_button_markup = ReplyKeyboardMarkup(
    [[KeyboardButton("üìç –ù–∞–∂–º–∏ —Å—é–¥–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å")]],
    resize_keyboard=True
)

# üëã –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ —á–∞—Ç)
async def welcome(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await register_user(update)
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî Lify Bot. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:",
        reply_markup=start_button_markup
    )

# ‚ñ∂Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start –∏–ª–∏ –∫–Ω–æ–ø–∫–∏ "üìç –ù–∞–∂–º–∏ —Å—é–¥–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å"
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üì¢ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Lify!\n\nüîπ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
        reply_markup=main_menu_markup
    )

# ‚òëÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
async def handle_menu_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    logger.info(f"[MAIN_MENU] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø—É–Ω–∫—Ç –º–µ–Ω—é: {text}")

    # üí° –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—à–ª—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
    context.user_data.clear()

    if text == "ü£çÔ∏è –ü—Ä–æ—Ñ–∏–ª—å":
        context.user_data["mode"] = "profile"
        context.user_data["profile_state"] = "sections"
        logger.info("[MAIN_MENU] –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª –ü—Ä–æ—Ñ–∏–ª—å")
        await show_profile_menu(update, context)

    elif text == "üë´ –î—Ä—É–∑—å—è":
        context.user_data["mode"] = "friends"
        context.user_data["friends_state"] = "list"
        logger.info("[MAIN_MENU] –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª –î—Ä—É–∑—å—è")
        await show_friends_menu(update, context)

    elif text == "üìÖ –°–æ–±—ã—Ç–∏—è":
        context.user_data["mode"] = "events"
        context.user_data["events_state"] = "menu"
        logger.info("[MAIN_MENU] –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª –°–æ–±—ã—Ç–∏—è")
        await show_events_menu(update, context)

    elif text == "üß† –ü—Å–∏—Ö–æ–ª–æ–≥":
        logger.info("[MAIN_MENU] –†–∞–∑–¥–µ–ª –ü—Å–∏—Ö–æ–ª–æ–≥ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        await update.message.reply_text("–†–∞–∑–¥–µ–ª üß† –ü—Å–∏—Ö–æ–ª–æ–≥ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")

    elif text == "ü¶•Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ":
        logger.info("[MAIN_MENU] –†–∞–∑–¥–µ–ª –ó–¥–æ—Ä–æ–≤—å–µ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        await update.message.reply_text("–†–∞–∑–¥–µ–ª ü¶•Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")

    elif text == "üìù –ó–∞–¥–∞—á–∏":
        logger.info("[MAIN_MENU] –†–∞–∑–¥–µ–ª –ó–∞–¥–∞—á–∏ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        await update.message.reply_text("–†–∞–∑–¥–µ–ª üìù –ó–∞–¥–∞—á–∏ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")

    elif text == "üîÅ –¶–∏–∫–ª":
        logger.info("[MAIN_MENU] –†–∞–∑–¥–µ–ª –¶–∏–∫–ª –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        await update.message.reply_text("–†–∞–∑–¥–µ–ª üîÅ –¶–∏–∫–ª –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")

    elif text == "üí¨ –ü–æ–º–æ—â—å (FTUE)":
        logger.info("[MAIN_MENU] –í—ã–∑–æ–≤ –ø–æ–º–æ—â–∏ FTUE")
        await update.message.reply_text(
            "üí≠ *–ü–æ–º–æ—â—å:*\n"
            "‚Äî –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.\n"
            "‚Äî –î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ –≤–≤–µ–¥–∏—Ç–µ: `–≤—ã—Ö–æ–¥`\n"
            "‚Äî –ß—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É: `–ø–æ–º–æ—â—å`",
            parse_mode='Markdown'
        )

    else:
        logger.warning(f"[MAIN_MENU] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {text}")
        await update.message.reply_text("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é.")

# üîô –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ –¥—Ä—É–≥–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤)
async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["state"] = "main_menu"
    await update.message.reply_text(
        "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
        reply_markup=main_menu_markup
    )
